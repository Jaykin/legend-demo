/**
 * 开放-封闭原则 OCP
 * 软件实体（类、模块、函数）等应该是可以扩展的，但是不可修改
 * 
 * 解决的问题：避免改动源码，因为改动代码是一个很危险的行为，可能会引发一系列的连锁反应，很多bug都来源于改动
 * 原理：通过增加代码的方式，而不是修改代码的方式，根据相应的运行环境让新代码和原有代码不会相互影响
 * 缺点：
 * 实践指导：
 *  1、利用对象的多态性消除过多的条件分支
 *  2、找出程序中将要发生变化的地方，然后把变化封装起来，可将不变的部分 和 可变部分 隔离
 *  3、放置挂钩（hooks）：在程序可能发生变化的地方放置一个挂钩，挂钩的返回结果决定了程序下一步走向
 *  4、回调函数：封装易于变化的逻辑
*/