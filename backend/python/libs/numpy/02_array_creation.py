#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
@Author : jay.wang
@Date   : 2022/7/11 17:25
@Desc   : 创建数组
"""
import numpy as np
from numpy.random import default_rng

# ============================== 从 python 序列（如：list、tuple）转换 ==============================
"""
np.array() 深拷贝
np.asarray() 浅拷贝
"""
# 1D array
a1D = np.array([1, 2])
# 2D array
a2D = np.array([[1, 2], [3, 4]])
print(a2D)
'''
[[1 2]
 [3 4]]
'''
# nD array
a3D = np.array([
    [
        [1, 2],
        [3, 4]
    ],
    [
        [5, 6],
        [7, 8]
    ]
])

# 指定转换后的类型
print(np.array([127, 128, 129], dtype=np.int8))    # [ 127 -128 -127]


# ============================== numpy 的数组创建函数 ==============================
# 1D array
print(np.arange(1, 2, 0.1, dtype=float))     # 获取指定取值区间的数组 [1.  1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9]
print(np.linspace(1, 2, 6, dtype=float))     # 获取指定数量的元素的数组 [1.  1.2 1.4 1.6 1.8 2. ]

# 2D array
print(np.eye(3, 5, 1))
'''
3：行数、5：列数、1：对角线开始索引
[[0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 0.]
 [0. 0. 0. 1. 0.]]
'''
print(np.diag([1, 2, 3], 1))
'''
返回二维数组
[1, 2, 3]：对角线上的数值、1：对角线开始索引
[[0 1 0 0]
 [0 0 2 0]
 [0 0 0 3]
 [0 0 0 0]]
'''
print(np.diag(np.array([[1, 2], [3, 4]])))
'''
若传入的是二维数组，则提取对角线的值组成一维数组返回
不支持传入3+维数组
[1 4]
'''

# nD array
print(np.zeros(5, dtype=int))
'''
一维：[0 0 0 0 0]
'''
print(np.zeros((2, 3)))
'''
dtype 默认为 float64
二维
2：第一维元素数量
3：第二维元素数量
[[0. 0. 0.]
 [0. 0. 0.]]
'''
print(np.zeros((2, 3, 4), dtype=int))
'''
三维
2：第一维元素数量
3：第二维元素数量
4：第三维元素数量
[[[0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]]
 [[0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]]]
'''

print(np.ones(5, dtype=int))
'''
[1 1 1 1 1]
功能同 np.zeros，只是 np.ones 填充的值是 1
'''

print(default_rng(42).random(5))
'''
[0.77395605 0.43887844 0.85859792 0.69736803 0.09417735]
功能同 np.zeros，只是 random 填充的值是 [0,1) 间的伪随机数
'''

print(np.indices((3, 3)))
'''
[[[0 0 0]
  [1 1 1]
  [2 2 2]]
 [[0 1 2]
  [0 1 2]
  [0 1 2]]]
'''


# ============================== 复制、连接、扩展已存在的数组 ==============================
# 复制
a = np.array([1, 2, 3, 4, 5, 6])
b = a[:2].copy()
b += 1
print(a, b)     # [1 2 3 4 5 6] [2 3]

# 连接
A = np.ones((2, 2))
B = np.eye(2, 2)
C = np.zeros((2, 2))
D = np.diag((-3, -4))
print(np.block([A, B, C, D]))
'''
[[ 1.  1.  1.  0.  0.  0. -3.  0.]
 [ 1.  1.  0.  1.  0.  0.  0. -4.]]
'''
print(np.block([[A, B], [C, D]]))
'''
[[ 1.  1.  1.  0.]
 [ 1.  1.  0.  1.]
 [ 0.  0. -3.  0.]
 [ 0.  0.  0. -4.]]
'''

# ============================== 从磁盘读取数组，无论是标准格式还是自定义格式 ==============================
# ============================== 通过字符串 or 缓冲区从原始 bytes 创建 ==============================
# ============================== 使用特殊库函数 ==============================


# 数组的属性
nd = np.array([[1, 2], [3, 4]])
print(nd.ndim)      # 2 维度数量
print(nd.shape)     # (2, 2) 形状，整数元组表示
print(nd.size)      # 4
print(nd.dtype)     # int64
print(np.array([[2, 1], [3, 6], [4, 5]]).shape)     # (3, 2)


